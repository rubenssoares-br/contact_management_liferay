/**
 * SPDX-FileCopyrightText: (c) 2024 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.liferay.contact.management.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Contact service. Represents a row in the &quot;CTMG_Contact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.contact.management.model.impl.ContactModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.contact.management.model.impl.ContactImpl</code>.
 * </p>
 *
 * @author Rubens Soares
 * @see Contact
 * @generated
 */
@ProviderType
public interface ContactModel extends BaseModel<Contact> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contact model instance should use the {@link Contact} interface instead.
	 */

	/**
	 * Returns the primary key of this contact.
	 *
	 * @return the primary key of this contact
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contact.
	 *
	 * @param primaryKey the primary key of this contact
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this contact.
	 *
	 * @return the uuid of this contact
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this contact.
	 *
	 * @param uuid the uuid of this contact
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the contact ID of this contact.
	 *
	 * @return the contact ID of this contact
	 */
	public long getContactId();

	/**
	 * Sets the contact ID of this contact.
	 *
	 * @param contactId the contact ID of this contact
	 */
	public void setContactId(long contactId);

	/**
	 * Returns the name of this contact.
	 *
	 * @return the name of this contact
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this contact.
	 *
	 * @param name the name of this contact
	 */
	public void setName(String name);

	/**
	 * Returns the email of this contact.
	 *
	 * @return the email of this contact
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this contact.
	 *
	 * @param email the email of this contact
	 */
	public void setEmail(String email);

	/**
	 * Returns the phone of this contact.
	 *
	 * @return the phone of this contact
	 */
	public long getPhone();

	/**
	 * Sets the phone of this contact.
	 *
	 * @param phone the phone of this contact
	 */
	public void setPhone(long phone);

	/**
	 * Returns the address of this contact.
	 *
	 * @return the address of this contact
	 */
	@AutoEscape
	public String getAddress();

	/**
	 * Sets the address of this contact.
	 *
	 * @param address the address of this contact
	 */
	public void setAddress(String address);

	@Override
	public Contact cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}